---

- name: Get IOC type specific default vars
  ansible.builtin.include_vars: "vars/{{ ioc.type }}.yml"

- name: Set required module
  ansible.builtin.set_fact:
    deploy_ioc_required_module: "{{ deploy_ioc_required_module }}"
  when: deploy_ioc_required_module is defined

- name: Override default required module if specified
  ansible.builtin.set_fact:
    deploy_ioc_required_module: "{{ ioc.required_module }}"
  when: ioc.required_module is defined

- name: Install any modules that are required for this IOC type
  ansible.builtin.include_role:
    name: nsls2.ioc_deploy.install_module
  when: deploy_ioc_required_module is defined
  vars:
    install_module_name: "{{ deploy_ioc_required_module }}"

- name: Merge all environment dicts
  ansible.builtin.set_fact:
    deploy_ioc_merged_env:
      "{{ deploy_ioc_default_env |
          combine(deploy_ioc_device_specific_env, ioc.environment) }}"

- name: Merge any installed module locations into environment
  ansible.builtin.set_fact:
    deploy_ioc_merged_env:
      "{{ deploy_ioc_merged_env | combine(install_module_installed) }}"
  when: deploy_ioc_required_module is defined

- name: Show merged environment pre-macro substitution
  ansible.builtin.debug:
    msg: "{{ deploy_ioc_merged_env }}"

- name: Find envvars that use macros
  ansible.builtin.set_fact:
    deploy_ioc_envvars_with_macros: "{{ deploy_ioc_merged_env | dict2items |
                                      selectattr('value', 'search', '\\$\\(') |
                                      map(attribute='key') |
                                      list }}"

- name: Expand all macros in value of {{ item }}
  ansible.builtin.include_tasks: process-env.yml
  with_items: "{{ deploy_ioc_envvars_with_macros }}"

- name: Display merged environment
  ansible.builtin.debug:
    msg: "{{ deploy_ioc_merged_env }}"

- name: Override default IOC exe root path if specified
  ansible.builtin.set_fact:
    deploy_ioc_template_root_path: "{{ ioc.ioc_template_root_path }}"
  when: ioc.ioc_template_root_path is defined

- name: Override default IOC exe name if specified
  ansible.builtin.set_fact:
    deploy_ioc_executable: "{{ ioc.executable }}"
  when: ioc.executable is defined

- name: Get list of substitution files
  ansible.builtin.set_fact:
    substitutions: "{{ ioc.substitutions }}"
  when: ioc.substitutions is defined
